{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","components/GifExpertApp.js","index.js"],"names":["AddCategory","setCategory","useState","inputValue","setInputValue","onSubmit","e","preventDefault","categories","type","value","onChange","target","GifGridItem","title","imageUrl","className","src","alt","getGifs","category","a","axios","get","params","api_key","limit","q","data","gifs","map","img","id","images","downsized_medium","url","console","warn","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","setCategories","c","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,YAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAUA,OACI,sBAAMC,SARW,SAACC,GAClBA,EAAEC,iBACFN,GAAY,SAAAO,GAAU,OAAKL,GAAL,mBAAmBK,OAEzCJ,EAAc,KAId,SACI,uBACIK,KAAK,OACLC,MAAOP,EACPQ,SAbc,SAACL,GAAD,OAAOF,EAAcE,EAAEM,OAAOF,a,QCL/CG,EAAc,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SAClC,OACE,sBAAKC,UAAU,6CAAf,UACE,qBACEC,IAAKF,EACLG,IAAKJ,IAEP,4BAAIA,Q,yCCLGK,EAAO,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,+EAEgBC,IAAMC,IAJjC,uCAI0C,CAC5CC,OAAQ,CACJC,QAPE,mCAQFC,MAAO,EACPC,EAAGP,KANM,uBAEDQ,EAFC,EAETA,KAAQA,KAOVC,EAAOD,EAAKE,KAAI,SAAAC,GAAG,MACrB,CACIC,GAAID,EAAIC,GACRlB,MAAOiB,EAAIjB,MACXC,SAAUgB,EAAIE,OAAOC,iBAAiBC,QAb7B,kBAgBVN,GAhBU,gCAkBjBO,QAAQC,KAAR,MAlBiB,yDAAH,sDCCPC,EAAU,SAAC,GAAkB,IAAhBlB,EAAe,EAAfA,SAEtB,ECJwB,SAACA,GAE3B,MAA0BlB,mBAAS,CACjC0B,KAAM,GACNW,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAgBA,OAXAC,qBAAU,WACRvB,EAAQC,GACLuB,MAAK,SAAAC,GACJH,EAAS,CACPb,KAAMgB,EACNL,SAAS,SAId,CAACnB,IAEGoB,EDd6BK,CAAazB,GAAjCa,EAAd,EAAQL,KAAcW,EAAtB,EAAsBA,QAEtB,OACI,qCACI,6BAAKnB,IACL,4BAAImB,GAAW,eACf,qBAAKvB,UAAU,sDAAf,SACKiB,EAAOH,KAAI,SAAAC,GAAG,OAAI,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEY1Cc,EArBM,WAEjB,MAAoC5C,mBAAS,CAAC,WAA9C,mBAAOM,EAAP,KAAmBuC,EAAnB,KAEA,OACI,qCACI,8CACA,cAAC,EAAD,CAAa9C,YAAa8C,IAC1B,uBACA,8BAEQvC,EAAWsB,KAAI,SAAAkB,GAAC,OACZ,cAAC,EAAD,CAAiB5B,SAAU4B,GAAbA,Y,MCXtCC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.587208dc.chunk.js","sourcesContent":["import {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategory}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => setInputValue(e.target.value);\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setCategory(categories => [inputValue,...categories]);\r\n        // setCategory(categories => [...categories, inputValue]);\r\n        setInputValue('');\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={ handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategory: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({title, imageUrl}) => {\r\n  return (\r\n    <div className=\"card animate__animated animate__fadeInLeft\">\r\n      <img\r\n        src={imageUrl}\r\n        alt={title}\r\n      />\r\n      <p>{title}</p>\r\n    </div>\r\n  )\r\n};\r\n","import axios from 'axios';\r\nconst API_KEY = 'SiOq4UAKW0fjrhaJWguWr3Xa7KN6KtJo';\r\nconst URL = 'https://api.giphy.com/v1/gifs/search';\r\n\r\nexport const getGifs = async (category) => {\r\n  try {\r\n      const { data: { data } } = await axios.get(URL, {\r\n          params: {\r\n              api_key: API_KEY,\r\n              limit: 3,\r\n              q: category,\r\n          },\r\n      });\r\n      const gifs = data.map(img => (\r\n          {\r\n              id: img.id,\r\n              title: img.title,\r\n              imageUrl: img.images.downsized_medium.url,\r\n          })\r\n      )\r\n      return gifs;\r\n  } catch (error) {\r\n      console.warn(error);\r\n  }\r\n};","import React from 'react';\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data: images, loading } = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n            <p>{loading && 'Loading...'}</p>\r\n            <div className=\"card-grid animate__animated animate__fadeInRightBig\">\r\n                {images.map(img => <GifGridItem key={img.id} {...img} />)}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(category)\r\n      .then(imgs => {\r\n        setState({\r\n          data: imgs,\r\n          loading: false,\r\n        });\r\n      });\r\n\r\n  }, [category])\r\n\r\n  return state;\r\n}\r\n","import { useState } from \"react\";\r\nimport { AddCategory } from \"./AddCategory\";\r\nimport { GifGrid } from './GifGrid';\r\n\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['Naruto']);\r\n\r\n    return (\r\n        <>\r\n            <h1>GifExpertApp</h1>\r\n            <AddCategory setCategory={setCategories} />\r\n            <hr />\r\n            <div>\r\n                {\r\n                    categories.map(c => (\r\n                        <GifGrid key={c} category={c} />\r\n                    ))\r\n                }\r\n            </div>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GifExpertApp from './components/GifExpertApp'\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}